<p>Ever find yourself having to replace some text in a request or response? You set a break point for the URL, and then each time the URL is called you have to modify the request or response body. After the first 100 or so times it starts to get annoying (by the 1,000 time you hate HTTP). Well here to save the day is “Replace Text” this lovely little script does it for you! </p>  <p>The first part is the UI portion. Pretty much its just 3 prompt boxes that have you input the original text, a session filter, and then the replacement text. To disable you just set the original text to nothing.</p>  <p>The session filter uses <em>ValidUrlOrHostname</em> which can be found on the <a href="http://bgtechrants.blogspot.com/2012/02/fiddler-scripts-intro.html" target="_blank">first post</a> of this series.</p>  <p>To make this even more useful the original text can be a regular expression, using ‘/’ to wrap the expression.</p>  <pre style="border-bottom: #cecece 1px solid; border-left: #cecece 1px solid; padding-bottom: 5px; background-color: #fbfbfb; min-height: 40px; padding-left: 5px; width: 650px; padding-right: 5px; overflow: auto; border-top: #cecece 1px solid; border-right: #cecece 1px solid; padding-top: 5px"><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  1: <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">var</span> sReplaceTextHosts: String = "<span style="color: #8b0000"></span>";<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  2: <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">var</span> sReplaceTextOriginalText: String = "<span style="color: #8b0000"></span>";<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  3: <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">var</span> sReplaceTextReplacmentText: String = "<span style="color: #8b0000"></span>";<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  4: <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> ToolsAction("<span style="color: #8b0000">Replace Text</span>")<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  5: <span style="color: #0000ff">function</span> ReplaceText() {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  6: 	sReplaceTextOriginalText = FiddlerObject.prompt("<span style="color: #8b0000">Enter original text\n</span>" + <br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  7: 							"<span style="color: #8b0000">Empty text will clear replacement\n</span>" + <br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  8: 							"<span style="color: #8b0000">To use RegEx, enclose text in '/'</span>", sReplaceTextOriginalText);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  9: 	<span style="color: #0000ff">if</span> (sReplaceTextOriginalText.Length != 0) {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 10: 		sReplaceTextHosts = FiddlerObject.prompt("<span style="color: #8b0000">Replacement can be limited by URL or hostname\n</span>" +<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 11: 							 "<span style="color: #8b0000">Multiple entries can be made, separate by ','\n</span>" +<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 12: 							 "<span style="color: #8b0000">URLs can be exact matches or Regex matches. To use RegEx, enclose text in '/'\n</span>" +<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 13: 							 "<span style="color: #8b0000">Hostname can be exact matches or subdomain matches. Hostname must begin with a '@' to signify it's a hostname and not a URL. To include subdomains of a hostname, prefix the hostname with '*.'\n</span>" +<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 14: 							 "<span style="color: #8b0000">Empty text will replace on all sessions</span>", sReplaceTextHosts);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 15: 		sReplaceTextReplacmentText = FiddlerObject.prompt("<span style="color: #8b0000">Enter replacment text</span>", sReplaceTextReplacmentText);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 16: 	}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 17: }</pre></pre><br /><br /><p>Now to replace text in the session response you just call this method from the <em>OnBeforeResponse</em> method, passing in the session object.</p><br /><br /><pre style="border-bottom: #cecece 1px solid; border-left: #cecece 1px solid; padding-bottom: 5px; background-color: #fbfbfb; min-height: 40px; padding-left: 5px; width: 650px; padding-right: 5px; overflow: auto; border-top: #cecece 1px solid; border-right: #cecece 1px solid; padding-top: 5px"><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  1: <span style="color: #0000ff">static</span> <span style="color: #0000ff">function</span> OnReplaceTextInResponse(oSession:Session) {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  2: 	<span style="color: #0000ff">if</span> ((sReplaceTextOriginalText.Length != 0) &amp;&amp; ValidUrlOrHostname(sReplaceTextHosts, oSession)) {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  3: 		oSession.utilDecodeResponse(); <span style="color: #008000">// Remove any compression or chunking from the response in order to make it easier to manipulate</span><br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  4: 		<span style="color: #0000ff">if</span> (sReplaceTextOriginalText.StartsWith("<span style="color: #8b0000">/</span>") &amp;&amp; sReplaceTextOriginalText.EndsWith("<span style="color: #8b0000">/</span>")) { <span style="color: #008000">// if the string starts and ends with a '/' then we assume its a regular expression</span><br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  5: 			oSession.utilReplaceRegexInResponse(sReplaceTextOriginalText.Substring(1, sReplaceTextOriginalText.Length - 2), sReplaceTextReplacmentText);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  6: 		}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  7: 		<span style="color: #0000ff">else</span> {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  8: 			oSession.utilReplaceInResponse(sReplaceTextOriginalText, sReplaceTextReplacmentText);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  9: 		}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 10: 	}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 11: }</pre></pre><br /><br /><p>To replace from the request you call this method from the <em>OnBeforeRequest</em> method, passing in the session object. Now one quick thing to note is that the request version is slightly longer. This is because there’s a great method called <em>utilReplaceRegexInResponse</em> that we use to replace using regular expressions in the response. Unfortunately no such method exists for the request so we have to get a bit creative.</p><br /><br /><pre style="border-bottom: #cecece 1px solid; border-left: #cecece 1px solid; padding-bottom: 5px; background-color: #fbfbfb; min-height: 40px; padding-left: 5px; width: 650px; padding-right: 5px; overflow: auto; border-top: #cecece 1px solid; border-right: #cecece 1px solid; padding-top: 5px"><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  1: <span style="color: #0000ff">static</span> <span style="color: #0000ff">function</span> OnReplaceTextInRequest(oSession:Session) {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  2: 	<span style="color: #0000ff">if</span> ((sReplaceTextOriginalText.Length != 0) &amp;&amp; ValidUrlOrHostname(sReplaceTextHosts, oSession)) {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  3: 		oSession.utilDecodeRequest(); <span style="color: #008000">// Remove any compression or chunking from the response in order to make it easier to manipulate</span><br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  4: 		<span style="color: #0000ff">if</span> (sReplaceTextOriginalText.StartsWith("<span style="color: #8b0000">/</span>") &amp;&amp; sReplaceTextOriginalText.EndsWith("<span style="color: #8b0000">/</span>")) { <span style="color: #008000">// if the string starts and ends with a '/' then we assume its a regular expression</span><br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  5: 			<span style="color: #0000ff">var</span> replaceRegex: Regex = <span style="color: #0000ff">new</span> Regex(sReplaceTextOriginalText.Substring(1, sReplaceTextOriginalText.Length - 2));<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  6: 			oSession.utilSetRequestBody(replaceRegex.Replace(oSession.GetRequestBodyAsString(), sReplaceTextReplacmentText));<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  7: 		}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  8: 		<span style="color: #0000ff">else</span> {<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px">  9: 			oSession.utilReplaceInRequest(sReplaceTextOriginalText, sReplaceTextReplacmentText);<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 10: 		}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 11: 	}<br /></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px"> 12: }</pre></pre><br /><br /><p>One quick note about the code shown here. Both the response and request methods here use the same variable names, so unless you want to have both replace the same things on the same sessions you would need to rename the variables.</p>